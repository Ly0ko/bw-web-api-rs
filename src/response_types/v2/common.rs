use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug)]
pub struct Toon {
    pub games_last_week: i32,
    pub gateway_id: i32,
    pub guid: i32,
    pub toon: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Stat {
    pub benefactor_id: String,
    pub gateway_id: i32,
    pub raw: RawStats,
    pub season_id: i32,
    pub toon: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Profile {
    pub avatar_id: String,
    pub description: String,
    pub private: bool,
    pub show_avatar_frame: bool,
    pub title: String,
    pub toon: String,
    pub toon_guid: i32,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct RawStats {
    pub legacy_disconnects: i32,
    pub legacy_losses: i32,
    pub legacy_toon_creation_time: i32,
    pub legacy_wins: i32,
    pub protoss_apm_max: i32,
    pub protoss_apm_min: i32,
    pub protoss_apm_sum: i32,
    pub protoss_disconnects_max: i32,
    pub protoss_disconnects_min: i32,
    pub protoss_disconnects_sum: i32,
    pub protoss_draws_max: i32,
    pub protoss_draws_min: i32,
    pub protoss_draws_sum: i32,
    pub protoss_losses_max: i32,
    pub protoss_losses_min: i32,
    pub protoss_losses_sum: i32,
    pub protoss_play_time_max: i32,
    pub protoss_play_time_min: i32,
    pub protoss_play_time_sum: i32,
    pub protoss_resources_gas_max: i32,
    pub protoss_resources_gas_min: i32,
    pub protoss_resources_gas_sum: i32,
    pub protoss_resources_minerals_max: i32,
    pub protoss_resources_minerals_min: i32,
    pub protoss_resources_minerals_sum: i32,
    pub protoss_resources_score_max: i32,
    pub protoss_resources_score_min: i32,
    pub protoss_resources_score_sum: i32,
    pub protoss_resources_spent_max: i32,
    pub protoss_resources_spent_min: i32,
    pub protoss_resources_spent_sum: i32,
    pub protoss_structures_constructed_max: i32,
    pub protoss_structures_constructed_min: i32,
    pub protoss_structures_constructed_sum: i32,
    pub protoss_structures_lost_max: i32,
    pub protoss_structures_lost_min: i32,
    pub protoss_structures_lost_sum: i32,
    pub protoss_structures_razed_max: i32,
    pub protoss_structures_razed_min: i32,
    pub protoss_structures_razed_sum: i32,
    pub protoss_structures_score_max: i32,
    pub protoss_structures_score_min: i32,
    pub protoss_structures_score_sum: i32,
    pub protoss_units_killed_max: i32,
    pub protoss_units_killed_min: i32,
    pub protoss_units_killed_sum: i32,
    pub protoss_units_lost_max: i32,
    pub protoss_units_lost_min: i32,
    pub protoss_units_lost_sum: i32,
    pub protoss_units_produced_max: i32,
    pub protoss_units_produced_min: i32,
    pub protoss_units_produced_sum: i32,
    pub protoss_units_score_max: i32,
    pub protoss_units_score_min: i32,
    pub protoss_units_score_sum: i32,
    pub protoss_wins_max: i32,
    pub protoss_wins_min: i32,
    pub protoss_wins_sum: i32,
    pub terran_apm_max: i32,
    pub terran_apm_min: i32,
    pub terran_apm_sum: i32,
    pub terran_disconnects_max: i32,
    pub terran_disconnects_min: i32,
    pub terran_disconnects_sum: i32,
    pub terran_draws_max: i32,
    pub terran_draws_min: i32,
    pub terran_draws_sum: i32,
    pub terran_losses_max: i32,
    pub terran_losses_min: i32,
    pub terran_losses_sum: i32,
    pub terran_play_time_max: i32,
    pub terran_play_time_min: i32,
    pub terran_play_time_sum: i32,
    pub terran_resources_gas_max: i32,
    pub terran_resources_gas_min: i32,
    pub terran_resources_gas_sum: i32,
    pub terran_resources_minerals_max: i32,
    pub terran_resources_minerals_min: i32,
    pub terran_resources_minerals_sum: i32,
    pub terran_resources_score_max: i32,
    pub terran_resources_score_min: i32,
    pub terran_resources_score_sum: i32,
    pub terran_resources_spent_max: i32,
    pub terran_resources_spent_min: i32,
    pub terran_resources_spent_sum: i32,
    pub terran_structures_constructed_max: i32,
    pub terran_structures_constructed_min: i32,
    pub terran_structures_constructed_sum: i32,
    pub terran_structures_lost_max: i32,
    pub terran_structures_lost_min: i32,
    pub terran_structures_lost_sum: i32,
    pub terran_structures_razed_max: i32,
    pub terran_structures_razed_min: i32,
    pub terran_structures_razed_sum: i32,
    pub terran_structures_score_max: i32,
    pub terran_structures_score_min: i32,
    pub terran_structures_score_sum: i32,
    pub terran_units_killed_max: i32,
    pub terran_units_killed_min: i32,
    pub terran_units_killed_sum: i32,
    pub terran_units_lost_max: i32,
    pub terran_units_lost_min: i32,
    pub terran_units_lost_sum: i32,
    pub terran_units_produced_max: i32,
    pub terran_units_produced_min: i32,
    pub terran_units_produced_sum: i32,
    pub terran_units_score_max: i32,
    pub terran_units_score_min: i32,
    pub terran_units_score_sum: i32,
    pub terran_wins_max: i32,
    pub terran_wins_min: i32,
    pub terran_wins_sum: i32,
    pub zerg_apm_max: i32,
    pub zerg_apm_min: i32,
    pub zerg_apm_sum: i32,
    pub zerg_disconnects_max: i32,
    pub zerg_disconnects_min: i32,
    pub zerg_disconnects_sum: i32,
    pub zerg_draws_max: i32,
    pub zerg_draws_min: i32,
    pub zerg_draws_sum: i32,
    pub zerg_losses_max: i32,
    pub zerg_losses_min: i32,
    pub zerg_losses_sum: i32,
    pub zerg_play_time_max: i32,
    pub zerg_play_time_min: i32,
    pub zerg_play_time_sum: i32,
    pub zerg_resources_gas_max: i32,
    pub zerg_resources_gas_min: i32,
    pub zerg_resources_gas_sum: i32,
    pub zerg_resources_minerals_max: i32,
    pub zerg_resources_minerals_min: i32,
    pub zerg_resources_minerals_sum: i32,
    pub zerg_resources_score_max: i32,
    pub zerg_resources_score_min: i32,
    pub zerg_resources_score_sum: i32,
    pub zerg_resources_spent_max: i32,
    pub zerg_resources_spent_min: i32,
    pub zerg_resources_spent_sum: i32,
    pub zerg_structures_constructed_max: i32,
    pub zerg_structures_constructed_min: i32,
    pub zerg_structures_constructed_sum: i32,
    pub zerg_structures_lost_max: i32,
    pub zerg_structures_lost_min: i32,
    pub zerg_structures_lost_sum: i32,
    pub zerg_structures_razed_max: i32,
    pub zerg_structures_razed_min: i32,
    pub zerg_structures_razed_sum: i32,
    pub zerg_structures_score_max: i32,
    pub zerg_structures_score_min: i32,
    pub zerg_structures_score_sum: i32,
    pub zerg_units_killed_max: i32,
    pub zerg_units_killed_min: i32,
    pub zerg_units_killed_sum: i32,
    pub zerg_units_lost_max: i32,
    pub zerg_units_lost_min: i32,
    pub zerg_units_lost_sum: i32,
    pub zerg_units_produced_max: i32,
    pub zerg_units_produced_min: i32,
    pub zerg_units_produced_sum: i32,
    pub zerg_units_score_max: i32,
    pub zerg_units_score_min: i32,
    pub zerg_units_score_sum: i32,
    pub zerg_wins_max: i32,
    pub zerg_wins_min: i32,
    pub zerg_wins_sum: i32,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Replay {
    pub attributes: ReplayAttributes,
    pub create_time: i32,
    pub link: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct ReplayAttributes {
    pub game_creator: String,
    pub game_id: String,
    pub game_name: String,
    pub game_save_id: String,
    pub game_speed: String,
    pub game_sub_type: String,
    pub game_type: String,
    pub map_era: String,
    pub map_height: String,
    pub map_title: String,
    pub map_width: String,
    pub replay_description: String,
    pub replay_humans: String,
    pub replay_map_number: String,
    pub replay_max_players: String,
    pub replay_min_players: String,
    pub replay_opponents: String,
    pub replay_player_names: String,
    pub replay_player_races: String,
    pub replay_player_types: String,
    pub replay_result: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct MatchmakedStats {
    pub benefactor_id: String,
    pub bucket: i32,
    pub disconnects: i32,
    pub game_mode_id: i32,
    pub highest_points: i32,
    pub highest_rating: i32,
    pub loss_streak: i32,
    pub losses: i32,
    pub points: i32,
    pub rating: i32,
    pub season_id: i32,
    pub toon: String,
    pub toon_guid: i32,
    pub win_streak: i32,
    pub wins: i32,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct GameResult {
    pub attributes: GameResultAttributes,
    pub benefactor_id: String,
    pub create_time: String,
    pub game_id: String,
    pub gateway_id: i32,
    pub match_guid: String,
    pub players: Vec<Player>,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct GameResultAttributes {
    pub client_version: String,
    pub map_name: String,
    pub tileset: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct Player {
    pub attributes: PlayerAttributes,
    pub result: String,
    pub stats: PlayerStats,
    pub toon: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct PlayerAttributes {
    pub g_player_data_idx: String,
    pub left: String,
    pub race: Option<String>,
    pub team: Option<String>,
    pub r#type: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct PlayerStats {
    pub zerg_apm: Option<String>,
    pub zerg_games_played: Option<String>,
    pub zerg_play_time: Option<String>,
    pub zerg_resources_gas: Option<String>,
    pub zerg_resources_minerals: Option<String>,
    pub zerg_resources_score: Option<String>,
    pub zerg_resources_spent: Option<String>,
    pub zerg_score_overall: Option<String>,
    pub zerg_structures_razed: Option<String>,
    pub zerg_structures_lost: Option<String>,
    pub zerg_structures_constructed: Option<String>,
    pub zerg_structures_score: Option<String>,
    pub zerg_units_killed: Option<String>,
    pub zerg_units_lost: Option<String>,
    pub zerg_units_produced: Option<String>,
    pub zerg_units_score: Option<String>,
    pub zerg_draws: Option<String>,
    pub zerg_losses: Option<String>,
    pub zerg_wins: Option<String>,
    pub terran_apm: Option<String>,
    pub terran_games_played: Option<String>,
    pub terran_play_time: Option<String>,
    pub terran_resources_gas: Option<String>,
    pub terran_resources_minerals: Option<String>,
    pub terran_resources_score: Option<String>,
    pub terran_resources_spent: Option<String>,
    pub terran_score_overall: Option<String>,
    pub terran_structures_constructed: Option<String>,
    pub terran_structures_lost: Option<String>,
    pub terran_structures_razed: Option<String>,
    pub terran_structures_score: Option<String>,
    pub terran_units_killed: Option<String>,
    pub terran_units_lost: Option<String>,
    pub terran_units_produced: Option<String>,
    pub terran_units_score: Option<String>,
    pub terran_draws: Option<String>,
    pub terran_losses: Option<String>,
    pub terran_wins: Option<String>,
    pub protoss_apm: Option<String>,
    pub protoss_games_played: Option<String>,
    pub protoss_play_time: Option<String>,
    pub protoss_resources_gas: Option<String>,
    pub protoss_resources_minerals: Option<String>,
    pub protoss_resources_score: Option<String>,
    pub protoss_resources_spent: Option<String>,
    pub protoss_score_overall: Option<String>,
    pub protoss_structures_constructed: Option<String>,
    pub protoss_structures_lost: Option<String>,
    pub protoss_structures_razed: Option<String>,
    pub protoss_structures_score: Option<String>,
    pub protoss_units_killed: Option<String>,
    pub protoss_units_lost: Option<String>,
    pub protoss_units_produced: Option<String>,
    pub protoss_units_score: Option<String>,
    pub protoss_draws: Option<String>,
    pub protoss_losses: Option<String>,
    pub protoss_wins: Option<String>,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct AvatarFramed {
    pub level: i32,
    pub stat: String,
    pub url: String,
}

#[derive(Serialize, Deserialize, Debug)]
pub struct AvatarUnlocked {
    pub level: i32,
    pub stat: String,
    pub url: String,
}
